{"version":3,"sources":["components/Profile/Profile.jsx","components/Statistics/StatisticsItem.jsx","components/Statistics/StatisticsList.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/Transaction/TransactionRow.jsx","components/Transaction/TransactionTable.jsx","App.jsx","index.js"],"names":["Profile","props","className","src","avatar","alt","name","tag","location","stats","followers","views","likes","StatisticItem","label","percentage","StatistiscList","statisticalData","map","item","id","FriendListItem","isOnline","width","FriendList","friendList","friend","TransactionRow","type","amount","currency","TransactionTable","transactions","transaction","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kyGAgDeA,EA7CC,SAACC,GACf,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,gHACJH,UAAU,WAEZ,oBAAIA,UAAU,OAAd,SAAsBD,EAAMK,OAC5B,oBAAGJ,UAAU,MAAb,cAAqBD,EAAMM,OAC3B,mBAAGL,UAAU,WAAb,SAAyBD,EAAMO,cAGjC,qBAAIN,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMQ,MAAMC,gBAE3C,+BACE,sBAAMR,UAAU,QAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMQ,MAAME,YAE3C,+BACE,sBAAMT,UAAU,QAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMQ,MAAMG,mB,OCVpCC,EAfO,SAACZ,GACpB,OACG,qBAAIC,UAAU,OAAd,UACG,sBAAMA,UAAU,QAAhB,SAAyBD,EAAMa,QAC/B,uBAAMZ,UAAU,aAAhB,UAA8BD,EAAMc,WAApC,W,OCYMC,EAfQ,WACrB,OACE,0BAASd,UAAU,aAAnB,UACE,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,YAAd,SACGe,EAAgBC,KAAI,SAAAC,GACnB,OACE,cAAC,EAAD,CAA6BL,MAAOK,EAAKL,MAAOC,WAAYI,EAAKJ,YAA7CI,EAAKC,aCStBC,EAlBQ,SAACpB,GACrB,OACG,qBAAIC,UAAU,OAAd,UACG,uBAAMA,UAAU,SAAhB,6BAA0CD,EAAMqB,SAAW,SAAW,YACtE,qBAAKpB,UAAU,SAASC,IAAKF,EAAMG,OAAQC,IAAI,GAAGkB,MAAM,OACxD,mBAAGrB,UAAU,OAAb,SAAqBD,EAAMK,W,OCQrBkB,EAZI,WAChB,OACG,oBAAItB,UAAU,aAAd,SACIuB,EAAWP,KAAI,SAAAQ,GACb,OACG,cAAC,EAAD,CAAgCpB,KAAMoB,EAAOpB,KAAMF,OAAQsB,EAAOtB,OAAQkB,SAAUI,EAAOJ,UAAtEI,EAAON,UCa5BO,EAnBQ,SAAC1B,GACrB,OACG,qBAAIC,UAAU,gBAAd,UACG,6BAAKD,EAAM2B,OACX,6BAAK3B,EAAM4B,SACX,6BAAK5B,EAAM6B,e,OCqBLC,EAzBU,WACvB,OACE,wBAAO7B,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAGJ,uBAAOA,UAAU,GAAjB,SACG8B,EAAad,KAAI,SAAAe,GAChB,OAAQ,cAAC,EAAD,CAENL,KAAMK,EAAYL,KAClBC,OAAQI,EAAYJ,OACpBC,SAAUG,EAAYH,UAHjBG,EAAYb,aCSdc,EAlBH,WACT,OACG,gCACG,cAAC,EAAD,CACG5B,KAAM6B,EAAK7B,KACXC,IAAK4B,EAAK5B,IACVC,SAAU2B,EAAK3B,SACfJ,OAAQ+B,EAAK/B,OACbK,MAAO0B,EAAK1B,QAEf,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCdT2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93321458.chunk.js","sourcesContent":["\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img\r\n          src={props.avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"avatar\"\r\n        />\r\n        <h2 className=\"name\">{props.name}</h2>\r\n        <p className=\"tag\"> {props.tag}</p>\r\n        <p className=\"location\">{props.location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\"> {props.stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\"> {props.stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\"> {props.stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n\r\n  }),\r\n};\r\n\r\n\r\nexport default Profile","import PropTypes from \"prop-types\";\r\n\r\n\r\nconst StatisticItem = (props) => {\r\n   return (\r\n      <li className=\"item\">\r\n         <span className=\"label\">{props.label}</span>\r\n         <span className=\"percentage\">{props.percentage}%</span>\r\n      </li>\r\n   )\r\n}\r\n\r\nStatisticItem.propTypes = {\r\n   label: PropTypes.string.isRequired,\r\n   percentage: PropTypes.number.isRequired,\r\n\r\n\r\n};\r\nexport default StatisticItem","import StatisticItem from './StatisticsItem'\r\nimport statisticalData from './statistical-data.json'\r\n\r\n\r\nconst StatistiscList = () => {\r\n  return (\r\n    <section className=\"statistics\">\r\n      <h2 className=\"title\">Upload stats</h2>\r\n      <ul className=\"stat-list\">\r\n        {statisticalData.map(item => {\r\n          return (\r\n            <StatisticItem key={item.id} label={item.label} percentage={item.percentage} />\r\n          )\r\n        })\r\n        }\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\nexport default StatistiscList\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = (props) => {\r\n   return (\r\n      <li className=\"item\">\r\n         <span className=\"status\">Current status: {props.isOnline ? \"Online\" : \"Ofline\"}</span>\r\n         <img className=\"avatar\" src={props.avatar} alt=\"\" width=\"48\" />\r\n         <p className=\"name\">{props.name}</p>\r\n      </li>\r\n   )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n   isOnline: PropTypes.bool.isRequired,\r\n   avatar: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default FriendListItem","import FriendListItem from './FriendListItem'\r\nimport friendList from './friend-list.json'\r\n\r\nconst FriendList = () => {\r\n   return (\r\n      <ul className='friendList'>\r\n         {friendList.map(friend => {\r\n            return (\r\n               <FriendListItem key={friend.id} name={friend.name} avatar={friend.avatar} isOnline={friend.isOnline} />\r\n            )\r\n         })}\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default FriendList","import PropTypes from \"prop-types\";\r\n\r\nconst TransactionRow = (props) => {\r\n   return (\r\n      <tr className='transationRow'>\r\n         <td>{props.type}</td>\r\n         <td>{props.amount}</td>\r\n         <td>{props.currency}</td>\r\n      </tr>\r\n   )\r\n\r\n}\r\n\r\n\r\nTransactionRow.propTypes = {\r\n   type: PropTypes.string.isRequired,\r\n   amount: PropTypes.string.isRequired,\r\n   currency: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\nexport default TransactionRow","import TransactionRow from './TransactionRow'\r\nimport transactions from './transaction.json'\r\n\r\nconst TransactionTable = () => {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=''>\r\n        {transactions.map(transaction => {\r\n          return (<TransactionRow\r\n            key={transaction.id}\r\n            type={transaction.type}\r\n            amount={transaction.amount}\r\n            currency={transaction.currency} />\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n\r\n  )\r\n}\r\n\r\nexport default TransactionTable","import Profile from \"../src/components/Profile/Profile\";\r\nimport user from \"../src/components/Profile/user.json\";\r\nimport StatistiscList from './components/Statistics/StatisticsList';\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport TransactionTable from './components/Transaction/TransactionTable'\r\n\r\n\r\nconst App = () => {\r\n   return (\r\n      <div>\r\n         <Profile\r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            avatar={user.avatar}\r\n            stats={user.stats}\r\n         />\r\n         <StatistiscList />\r\n         <FriendList />\r\n         <TransactionTable />\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"../src/styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}